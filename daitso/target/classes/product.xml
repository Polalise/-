<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace xml의 이름 -->
<mapper namespace="productns">
	<select id="getTotal" parameterType="product" resultType="integer">
		select count(*) from product
			<where>
				<if test="keyword != null and keyword !=''">
					<if test="search =='subcon'">
						p_name like '%'||#{keyword}||'%' or
						p_content like '%'||#{keyword}||'%'
					</if>
					<if test="search !='subcon'">
						${search} like '%'||#{keyword}||'%'					
					</if>
				</if>
				<if test="keyword2 != null and keyword2 !=''">
					<if test="search2 =='판매'">
						p_value like '%'||'판매'||'%'
					</if>
					<if test="search2 =='구매'">
						p_value like '%'||'구매'||'%'
					</if>
					<if test="search2 =='전체보기'">						
					</if>
				</if>
			</where>
	</select>
	<select id="list" parameterType="product" resultType="product">
		select * from (select a.*,rowNum rn from (select * from product 
       <!-- where는 테이블로 부터 데이터 추출 조건 where 뒤에 문장이 있으면 where를 추가하고 없으면 <where> 생략 -->
		<where>
			<!-- keyword에 값이 있으면 검색 했다는 의미  값이 없으면 생략-->
			<if test="keyword != null and keyword !=''">
					<if test="search =='subcon'">
						p_name like '%'||#{keyword}||'%' or
						p_content like '%'||#{keyword}||'%'
					</if>
					<if test="search !='subcon'">
						${search} like '%'||#{keyword}||'%'					
					</if>
				</if>
				<if test="keyword2 != null and keyword2 !=''">
					<if test="search2 =='판매'">
						p_value like '%'||'판매'||'%'
					</if>
					<if test="search2 =='구매'">
						p_value like '%'||'구매'||'%'
					</if>
					<if test="search2 =='전체보기'">		
					</if>
				</if>
		</where>
			order by p_num desc) a) where rn between #{startRow} and #{endRow}
	</select>
	<select id="getMaxNum" resultType="integer">
		select nvl(max(p_num), 0) + 1 from product
	</select>
	<select id="select" parameterType="integer" resultType="product"> <!-- view -->
		select * from product where p_num=#{p_num}
	</select>
	<update id="updateReadCount" parameterType="integer">
		<!-- 조회수 1씩 증가 -->
		update product set readcount = readcount +1 where p_num=#{p_num}
	</update>
	<update id="update" parameterType="product">
		update product set p_name=#{p_name},p_writer=#{p_writer},price=#{price},
			p_local=#{p_local},p_content=#{p_content},thumnails=#{thumnails,jdbcType=VARCHAR},thumnails2=#{thumnails2,jdbcType=VARCHAR},thumnails3=#{thumnails3,jdbcType=VARCHAR}
			,thumnails4=#{thumnails4jdbcType=VARCHAR},thumnails5=#{thumnails5,jdbcType=VARCHAR},p_tag=#{p_tag} where p_num=#{p_num}
	</update>
	<update id="delete" parameterType="product">
		update product set p_del='y' where p_num=#{p_num}
	</update>
	<insert id="insert" parameterType="product">
		insert into product (p_num, p_writer, p_name, p_content, p_local, price, p_date, ip, p_del,p_value,p_tag,thumnails,thumnails2,thumnails3,thumnails4,thumnails5)
		 values (#{p_num},#{p_writer},#{p_name},#{p_content},#{p_local},#{price},sysdate,
		#{ip},'n',#{p_value},#{p_tag},#{thumnails,jdbcType=VARCHAR},#{thumnails2,jdbcType=VARCHAR},#{thumnails3,jdbcType=VARCHAR}
		,#{thumnails4,jdbcType=VARCHAR},#{thumnails5,jdbcType=VARCHAR})
	</insert>
	<!-- 판매자 아이디 가져오기 -->
	<select id="select2" parameterType="integer" resultType="product"> <!-- view -->
		select * from product where p_num=#{p_num}
	</select>
	<!-- 총게시글수 -->
	<select id = "getProductCount" resultType="int">
     select count(*) from product
   </select>
   <!-- 판매 게시글수 -->
	<select id = "getProductCount2" resultType="int">
     select count(*) from product where sel = 's'
   </select>
</mapper>